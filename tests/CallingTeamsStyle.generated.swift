/// Autogenerated file

// swiftlint:disable all
import UIKit

/// Entry point for the app stylesheet
public class CallingTeamsStyle: CallingBaseStyle {

	public override class func shared() -> CallingTeamsStyle {
		 struct __ { static let _sharedInstance = CallingTeamsStyle() }
		return __._sharedInstance
	}
	//MARK: - Color
	public static let Color = ColorAppearanceProxy()
	open class ColorAppearanceProxy {
		public let mainProxy: () -> CallingBaseStyle
		public init(proxy: @escaping () -> CallingBaseStyle) {
			self.mainProxy = proxy
		}

		//MARK: white 
		public var _white: UIColor?
		open func whiteProperty(_ traitCollection: UITraitCollection? = UIScreen.main.traitCollection) -> UIColor {
			if let override = _white { return override }
			return UIColor(red: 1.0, green: 1.0, blue: 1.0, alpha: 1.0)
			}
		public var white: UIColor {
			get { return self.whiteProperty() }
			set { _white = newValue }
		}
	}
	//MARK: - CallingTeamsStyleColorNuovo
	override open func ColorNuovoStyle() -> CallingBaseStyle.ColorNuovoAppearanceProxy {
		if let override = _ColorNuovo { return override }
			return CallingTeamsStyleColorNuovoAppearanceProxy(proxy: { return CallingTeamsStyle.shared() })
		}
	open class CallingTeamsStyleColorNuovoAppearanceProxy: CallingBaseStyle.ColorNuovoAppearanceProxy {

		//MARK: - CallingTeamsStyletextColorColorNuovo
		override open func textColorStyle() -> CallingBaseStyle.ColorNuovoAppearanceProxy.textColorAppearanceProxy {
			if let override = _textColor { return override }
				return CallingTeamsStyletextColorColorNuovoAppearanceProxy(proxy: mainProxy)
			}
		open class CallingTeamsStyletextColorColorNuovoAppearanceProxy: CallingBaseStyle.ColorNuovoAppearanceProxy.textColorAppearanceProxy {
		}

	}
	//MARK: - CallingTeamsStyleColorExtended
	override open func ColorExtendedStyle() -> CallingBaseStyle.ColorExtendedAppearanceProxy {
		if let override = _ColorExtended { return override }
			return CallingTeamsStyleColorExtendedAppearanceProxy(proxy: { return CallingTeamsStyle.shared() })
		}
	open class CallingTeamsStyleColorExtendedAppearanceProxy: CallingBaseStyle.ColorExtendedAppearanceProxy {

		//MARK: - CallingTeamsStyletextColorColorExtended
		override open func textColorStyle() -> CallingBaseStyle.ColorExtendedAppearanceProxy.textColorAppearanceProxy {
			if let override = _textColor { return override }
				return CallingTeamsStyletextColorColorExtendedAppearanceProxy(proxy: mainProxy)
			}
		open class CallingTeamsStyletextColorColorExtendedAppearanceProxy: CallingBaseStyle.ColorExtendedAppearanceProxy.textColorAppearanceProxy {
		}

	}
	//MARK: - CallingTeamsStyleColorAncoraNuovo
	override open func ColorAncoraNuovoStyle() -> CallingBaseStyle.ColorAncoraNuovoAppearanceProxy {
		if let override = _ColorAncoraNuovo { return override }
			return CallingTeamsStyleColorAncoraNuovoAppearanceProxy(proxy: { return CallingTeamsStyle.shared() })
		}
	open class CallingTeamsStyleColorAncoraNuovoAppearanceProxy: CallingBaseStyle.ColorAncoraNuovoAppearanceProxy {

		//MARK: - CallingTeamsStyletextColorColorAncoraNuovo
		override open func textColorStyle() -> CallingBaseStyle.ColorAncoraNuovoAppearanceProxy.textColorAppearanceProxy {
			if let override = _textColor { return override }
				return CallingTeamsStyletextColorColorAncoraNuovoAppearanceProxy(proxy: mainProxy)
			}
		open class CallingTeamsStyletextColorColorAncoraNuovoAppearanceProxy: CallingBaseStyle.ColorAncoraNuovoAppearanceProxy.textColorAppearanceProxy {
		}

	}
	//MARK: - CallingTeamsStyleButton
	override open func ButtonStyle() -> CallingBaseStyle.ButtonAppearanceProxy {
		if let override = _Button { return override }
			return CallingTeamsStyleButtonAppearanceProxy(proxy: { return CallingTeamsStyle.shared() })
		}
	open class CallingTeamsStyleButtonAppearanceProxy: CallingBaseStyle.ButtonAppearanceProxy {

		//MARK: - CallingTeamsStyletextColorButton
		override open func textColorStyle() -> CallingBaseStyle.ButtonAppearanceProxy.textColorAppearanceProxy {
			if let override = _textColor { return override }
				return CallingTeamsStyletextColorButtonAppearanceProxy(proxy: mainProxy)
			}
		open class CallingTeamsStyletextColorButtonAppearanceProxy: CallingBaseStyle.ButtonAppearanceProxy.textColorAppearanceProxy {
		}

	}

}