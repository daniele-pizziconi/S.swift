/// Autogenerated file

// swiftlint:disable all
import UIKit

/// Entry point for the app stylesheet
public class SkypeStyle: TeamsStyle {

	public override class func shared() -> SkypeStyle {
		 struct __ { static let _sharedInstance = SkypeStyle() }
		return __._sharedInstance
	}
	//MARK: - SkypeStyleColor
	override public func ColorStyle() -> TeamsStyle.ColorAppearanceProxy {
		if let override = _Color { return override }
			return SkypeStyleColorAppearanceProxy()
		}
	public class SkypeStyleColorAppearanceProxy: TeamsStyle.ColorAppearanceProxy {

		//MARK: red 
		fileprivate var _red: UIColor?
		public func redProperty(_ traitCollection: UITraitCollection? = UIScreen.main.traitCollection) -> UIColor {
			if let override = _red { return override }
			return UIColor(red: 0.0, green: 0.47058824, blue: 0.83137256, alpha: 1.0)
			}
		public var red: UIColor {
			get { return self.redProperty() }
			set { _red = newValue }
		}
	}
	//MARK: - Animator
	override public func AnimatorAnimator() -> TeamsStyle.AnimatorAnimatorProxy {
		if let override = _Animator { return override }
			return SkypeStyleAnimatorAnimatorProxy()
		}
	public class SkypeStyleAnimatorAnimatorProxy: TeamsStyle.AnimatorAnimatorProxy {

		//MARK: - SkypeStylebasic
		override public func basicStyle() -> TeamsStyle.AnimatorAnimatorProxy.basicAppearanceProxy {
			if let override = _basic { return override }
				return SkypeStylebasicAppearanceProxy()
			}
		public class SkypeStylebasicAppearanceProxy: TeamsStyle.AnimatorAnimatorProxy.basicAppearanceProxy {

		//MARK: test 
		fileprivate var _test: CGFloat?
		public func testProperty(_ traitCollection: UITraitCollection? = UIScreen.main.traitCollection) -> CGFloat {
			if let override = _test { return override }
			return CGFloat(10.0)
			}
		public var test: CGFloat {
			get { return self.testProperty() }
			set { _test = newValue }
		}
		}
	

}
}