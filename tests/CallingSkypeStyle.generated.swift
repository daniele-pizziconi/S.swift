/// Autogenerated file

// swiftlint:disable all
import UIKit

/// Entry point for the app stylesheet
public class CallingSkypeStyle: CallingBaseStyle {

	public override class func shared() -> CallingSkypeStyle {
		 struct __ { static let _sharedInstance = CallingSkypeStyle() }
		return __._sharedInstance
	}
	//MARK: - Duration
	public static let Duration = DurationAppearanceProxy()
	open class DurationAppearanceProxy {
		public let mainProxy: () -> CallingBaseStyle
		public init(proxy: @escaping () -> CallingBaseStyle) {
			self.mainProxy = proxy
		}

		//MARK: - interval
		open let interval = intervalAppearanceProxy()
		open class intervalAppearanceProxy {
			public let mainProxy: () -> CallingBaseStyle
			public init(proxy: @escaping () -> CallingBaseStyle) {
				self.mainProxy = proxy
			}

			//MARK: long 
			public var _long: CGFloat?
			open func longProperty(_ traitCollection: UITraitCollection? = UIScreen.main.traitCollection) -> CGFloat {
				if let override = _long { return override }
					return CGFloat(1.0)
				}
			public var long: CGFloat {
				get { return self.longProperty() }
				set { _long = newValue }
			}
		}

	}
	//MARK: - CallingSkypeStyleColor
	override open func ColorStyle() -> CallingBaseStyle.ColorAppearanceProxy {
		if let override = _Color { return override }
			return CallingSkypeStyleColorAppearanceProxy(proxy: { return CallingSkypeStyle.shared() })
		}
	open class CallingSkypeStyleColorAppearanceProxy: CallingBaseStyle.ColorAppearanceProxy {

		//MARK: - CallingSkypeStyleblueColor
		override open func blueStyle() -> CallingBaseStyle.ColorAppearanceProxy.blueAppearanceProxy {
			if let override = _blue { return override }
				return CallingSkypeStyleblueColorAppearanceProxy(proxy: mainProxy)
			}
		open class CallingSkypeStyleblueColorAppearanceProxy: CallingBaseStyle.ColorAppearanceProxy.blueAppearanceProxy {
		}

	}
	//MARK: - CallingSkypeStyleColorExtended
	override open func ColorExtendedStyle() -> CallingBaseStyle.ColorExtendedAppearanceProxy {
		if let override = _ColorExtended { return override }
			return CallingSkypeStyleColorExtendedAppearanceProxy(proxy: { return CallingSkypeStyle.shared() })
		}
	open class CallingSkypeStyleColorExtendedAppearanceProxy: CallingBaseStyle.ColorExtendedAppearanceProxy {

		//MARK: - CallingSkypeStyleprovaColorExtended
		override open func provaStyle() -> CallingBaseStyle.ColorExtendedAppearanceProxy.provaAppearanceProxy {
			if let override = _prova { return override }
				return CallingSkypeStyleprovaColorExtendedAppearanceProxy(proxy: mainProxy)
			}
		open class CallingSkypeStyleprovaColorExtendedAppearanceProxy: CallingBaseStyle.ColorExtendedAppearanceProxy.provaAppearanceProxy {
		}

	}

}