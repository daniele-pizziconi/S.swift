/// Autogenerated file

// swiftlint:disable all
import UIKit

/// Entry point for the app stylesheet
public class CallingSkypeStyle: CallingBaseStyle {

	public override class func shared() -> CallingSkypeStyle {
		 struct __ { static let _sharedInstance = CallingSkypeStyle() }
		return __._sharedInstance
	}
	//MARK: - Duration
	public static let Duration = DurationAppearanceProxy()
	open class DurationAppearanceProxy {
		public let mainProxy: () -> CallingBaseStyle
		public init(proxy: @escaping () -> CallingBaseStyle) {
			self.mainProxy = proxy
		}

		//MARK: - interval
		open let interval = intervalAppearanceProxy()
		open class intervalAppearanceProxy {
			public let mainProxy: () -> CallingBaseStyle
			public init(proxy: @escaping () -> CallingBaseStyle) {
				self.mainProxy = proxy
			}

			//MARK: long 
			public var _long: CGFloat?
			open func longProperty(_ traitCollection: UITraitCollection? = UIScreen.main.traitCollection) -> CGFloat {
				if let override = _long { return override }
					return CGFloat(1.0)
				}
			public var long: CGFloat {
				get { return self.longProperty() }
				set { _long = newValue }
			}
		}

	}
	//MARK: - CallingSkypeStyleCallDefaultButton
	override open func CallDefaultButtonStyle() -> CallingBaseStyle.CallDefaultButtonAppearanceProxy {
		if let override = _CallDefaultButton { return override }
			return CallingSkypeStyleCallDefaultButtonAppearanceProxy(proxy: { return SkypeStyle.shared() })
		}
	open class CallingSkypeStyleCallDefaultButtonAppearanceProxy: CallingBaseStyle.CallDefaultButtonAppearanceProxy {

		//MARK: - CallingSkypeStylecolorCallDefaultButton
		override open func colorStyle() -> CallingBaseStyle.CallDefaultButtonAppearanceProxy.colorAppearanceProxy {
			if let override = _color { return override }
				return CallingSkypeStylecolorCallDefaultButtonAppearanceProxy(proxy: mainProxy)
			}
		open class CallingSkypeStylecolorCallDefaultButtonAppearanceProxy: CallingBaseStyle.CallDefaultButtonAppearanceProxy.colorAppearanceProxy {
		}

	}

}